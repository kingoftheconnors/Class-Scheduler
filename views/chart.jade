html
  head
    //link(rel='stylesheet', href='/stylesheets/style.css')
    link(rel='stylesheet', href='stylesheets/style.css')
    link(rel="stylesheet", href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css")
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css")
    script(src='https://code.jquery.com/jquery-3.5.1.min.js')
    script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js")
    script(type='text/javascript', src="http://code.highcharts.com/highcharts.js")
    script(type='text/javascript', src="http://code.highcharts.com/modules/exporting.js")
    script(type='text/javascript', src="https://code.highcharts.com/modules/heatmap.js")
    script(type='text/javascript', src="http://code.highcharts.com/modules/export-data.js")
    script(type='text/javascript', src="http://code.highcharts.com/modules/accessibility.js")
    title Delivered Leads
  body
    .container
        .row
            .col-6.align-self-center
                h1.py-5.float-right.display-4 Moc Meetup
            .col-6
                img(src='images/logo.png')
        .row.justify-content-center
            .col-12
                #container(style="min-width: 500px; height: 500px; margin: 0 auto")
        .row.justify-content-center
            .col-6
                button.form-control(type="submit") Save as Club Scheduler Page
    script.
        function getPointCategoryName(point, dimension) {
            var series = point.series,
                isY = dimension === 'y',
                axis = series[isY ? 'yAxis' : 'xAxis'];
            return axis.categories[point[isY ? 'y' : 'x']];
        }

        window.onload = function () {
            Highcharts.chart('container', {
                credits: {
                    enabled: false
                },
                chart: {
                    type: 'heatmap',
                    marginTop: 40,
                    marginBottom: 80,
                    plotBorderWidth: 1
                },
                title: {
                    text: "Club Schedule"
                },
                
                xAxis: {
                    categories: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],
                    title: null
                },
                yAxis: {
                    categories: ['8:00-9:00', '9:00-10:00', '10:00-11:00', '11:00-12:00', '12:00-1:00', '1:00-2:00', '2:00-3:00', '3:00-4:00', '4:00-5:00', '5:00-6:00', '6:00-7:00', '7:00-8:00', '8:00-9:00'],
                    title: null
                },

                accessibility: {
                    point: {
                        descriptionFormatter: function (point) {
                            var ix = point.index + 1,
                                xName = getPointCategoryName(point, 'x'),
                                yName = getPointCategoryName(point, 'y'),
                                val = point.value;
                            return ix + '. ' + xName + ' sales ' + yName + ', ' + val + '.';
                        }
                    }
                },

                colorAxis: {
                    min: 0,
                    minColor: '#FFFFFF'
                    //maxColor: Highcharts.getOptions().colors[0]
                },

                legend: {
                    align: 'right',
                    layout: 'vertical',
                    margin: 0,
                    verticalAlign: 'top',
                    y: 25,
                    symbolHeight: 280
                },

                tooltip: {
                    formatter: function () {
                        return '<b>' + getPointCategoryName(this.point, 'x') + '</b> has <br><b>' +
                            this.point.value + '</b> classes from <br><b>' + getPointCategoryName(this.point, 'y') + '</b>';
                    }
                },

                series: [
                    {
                    data: JSON.parse('!{barArray}'),
                    borderWidth: 1,
                    name: "#{seriesName}"
                    }
                ],
                
                responsive: {
                    rules: [{
                        condition: {
                            maxWidth: 500
                        },
                        chartOptions: {
                            yAxis: {
                                labels: {
                                    formatter: function () {
                                        return this.value.charAt(0);
                                    }
                                }
                            }
                        }
                    }]
                }
            });
        };